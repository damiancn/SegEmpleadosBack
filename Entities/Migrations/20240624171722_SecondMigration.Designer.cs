// <auto-generated />
using System;
using Entities.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20240624171722_SecondMigration")]
    partial class SecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Models.Catalog.BeneficiaryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Fk_Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeconLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Employee");

                    b.ToTable("Beneficiaries", "Catalogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afa6"),
                            FirstName = "Perez",
                            Fk_Employee = new Guid("38cfa51a-a5e4-83a2-2cfd-b3a608c8cc93"),
                            Name = "Juan",
                            Relationship = " Hermano",
                            SeconLastName = "Perez"
                        });
                });

            modelBuilder.Entity("Entities.Models.Catalog.EmployeeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAcces")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fotography")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("Decimal(8,2)");

                    b.Property<string>("SeconLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees", "Catalogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b07b6dce-e97f-99cb-c7ad-95c202bbe464"),
                            Age = 26,
                            BirthDate = new DateTime(1997, 12, 12, 15, 30, 45, 0, DateTimeKind.Unspecified),
                            DateAcces = new DateTime(2024, 6, 24, 11, 17, 22, 190, DateTimeKind.Local).AddTicks(4553),
                            FirstName = "Carreon",
                            Fotography = "",
                            Name = "Damian",
                            Position = "Empleado",
                            Salary = 10000.05m,
                            SeconLastName = "Neria"
                        },
                        new
                        {
                            Id = new Guid("38cfa51a-a5e4-83a2-2cfd-b3a608c8cc93"),
                            Age = 25,
                            BirthDate = new DateTime(1999, 2, 1, 9, 0, 45, 0, DateTimeKind.Unspecified),
                            DateAcces = new DateTime(2024, 6, 24, 11, 17, 22, 190, DateTimeKind.Local).AddTicks(4808),
                            FirstName = "Perez",
                            Fotography = "",
                            Name = "Gerardo",
                            Position = "Empleado",
                            Salary = 10000.03m,
                            SeconLastName = "Perez"
                        });
                });

            modelBuilder.Entity("Entities.Models.Security.PageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Icon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pages", "Security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ad65152-94ec-71cd-7a19-77a4e4785020"),
                            Active = true,
                            Code = "empleado",
                            Icon = "person",
                            Name = "Empleados"
                        },
                        new
                        {
                            Id = new Guid("abeede3b-f554-b981-0963-d9fc4290dacf"),
                            Active = true,
                            Code = "group",
                            Icon = "manage_accounts",
                            Name = "Beneficiarios"
                        });
                });

            modelBuilder.Entity("Entities.Models.Security.RolModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Roles", "Security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("592231c0-56b5-cb5e-3ad8-db295dbc1c84"),
                            Active = true,
                            Code = "ADMIN",
                            Name = "Administrador"
                        },
                        new
                        {
                            Id = new Guid("cc504b2d-0731-52df-34fb-bc3e1e2e9577"),
                            Active = true,
                            Code = "User",
                            Name = "Usuario"
                        });
                });

            modelBuilder.Entity("Entities.Models.Security.RolPageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("Fk_Pagina")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fk_Rol")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Pagina");

                    b.HasIndex("Fk_Rol");

                    b.ToTable("RolPages", "Security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc7cf1fd-569f-dc57-aab0-dcfb973b822c"),
                            Active = true,
                            Fk_Pagina = new Guid("9ad65152-94ec-71cd-7a19-77a4e4785020"),
                            Fk_Rol = new Guid("592231c0-56b5-cb5e-3ad8-db295dbc1c84")
                        },
                        new
                        {
                            Id = new Guid("6a7ab137-f6a2-6715-1a3c-e38ec055ac78"),
                            Active = true,
                            Fk_Pagina = new Guid("abeede3b-f554-b981-0963-d9fc4290dacf"),
                            Fk_Rol = new Guid("592231c0-56b5-cb5e-3ad8-db295dbc1c84")
                        },
                        new
                        {
                            Id = new Guid("4a3613c8-f887-0c86-789d-578ae3aa0ec3"),
                            Active = true,
                            Fk_Pagina = new Guid("9ad65152-94ec-71cd-7a19-77a4e4785020"),
                            Fk_Rol = new Guid("cc504b2d-0731-52df-34fb-bc3e1e2e9577")
                        },
                        new
                        {
                            Id = new Guid("ffaa1f38-746a-32c6-bca9-75449c85d235"),
                            Active = true,
                            Fk_Pagina = new Guid("abeede3b-f554-b981-0963-d9fc4290dacf"),
                            Fk_Rol = new Guid("cc504b2d-0731-52df-34fb-bc3e1e2e9577")
                        });
                });

            modelBuilder.Entity("Entities.Models.Security.RolUserModel", b =>
                {
                    b.Property<Guid>("Fk_Rol")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fk_User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.HasKey("Fk_Rol", "Fk_User");

                    b.HasIndex("Fk_User");

                    b.ToTable("RolUsers", "Security");

                    b.HasData(
                        new
                        {
                            Fk_Rol = new Guid("592231c0-56b5-cb5e-3ad8-db295dbc1c84"),
                            Fk_User = new Guid("38bd1db4-d945-43b0-7f60-58d43707c691"),
                            Active = true
                        },
                        new
                        {
                            Fk_Rol = new Guid("cc504b2d-0731-52df-34fb-bc3e1e2e9577"),
                            Fk_User = new Guid("b335379f-0be3-a7ba-1463-78f3123b8491"),
                            Active = true
                        });
                });

            modelBuilder.Entity("Entities.Models.Security.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Fk_Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Employee")
                        .IsUnique()
                        .HasFilter("[Fk_Employee] IS NOT NULL");

                    b.ToTable("Users", "Security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("38bd1db4-d945-43b0-7f60-58d43707c691"),
                            Active = true,
                            Fk_Employee = new Guid("b07b6dce-e97f-99cb-c7ad-95c202bbe464"),
                            Name = "Administrador",
                            Password = "sdK5nk7axI/6lkjktiFZ1H6po87xQrStMYEpu9m1/k19JVwW"
                        },
                        new
                        {
                            Id = new Guid("b335379f-0be3-a7ba-1463-78f3123b8491"),
                            Active = true,
                            Fk_Employee = new Guid("38cfa51a-a5e4-83a2-2cfd-b3a608c8cc93"),
                            Name = "Usuario",
                            Password = "4DP4QXMKX2jnabAMKJpJuHRfQfR3ggufp5/Qlem8y7FFov6M"
                        });
                });

            modelBuilder.Entity("Entities.Models.Catalog.BeneficiaryModel", b =>
                {
                    b.HasOne("Entities.Models.Catalog.EmployeeModel", "Employee")
                        .WithMany("Beneficiary")
                        .HasForeignKey("Fk_Employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Models.Security.RolPageModel", b =>
                {
                    b.HasOne("Entities.Models.Security.PageModel", "Page")
                        .WithMany()
                        .HasForeignKey("Fk_Pagina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Security.RolModel", "Rol")
                        .WithMany()
                        .HasForeignKey("Fk_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Entities.Models.Security.RolUserModel", b =>
                {
                    b.HasOne("Entities.Models.Security.RolModel", "Rol")
                        .WithMany()
                        .HasForeignKey("Fk_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Security.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("Fk_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Models.Security.UserModel", b =>
                {
                    b.HasOne("Entities.Models.Catalog.EmployeeModel", "Employee")
                        .WithOne("User")
                        .HasForeignKey("Entities.Models.Security.UserModel", "Fk_Employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Models.Catalog.EmployeeModel", b =>
                {
                    b.Navigation("Beneficiary");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
